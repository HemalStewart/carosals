{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/purnimauyangoda/carosals/src/lib/effect-expo.esm.js"],"sourcesContent":["/**\n * UI Initiative Expo Slider\n *\n * Parallax & scale effects slider\n *\n * https://uiinitiative.com\n *\n * Copyright 2025 UI Initiative\n *\n * Released under the UI Initiative Regular License\n *\n * June 27, 2025\n */\n\nimport { effectInit } from 'swiper/effect-utils';\n\nif (typeof window !== 'undefined' && window.SwiperElementRegisterParams) {\n  window.SwiperElementRegisterParams(['expoEffect']);\n}\n\nexport default function EffectExpo({ swiper, on, extendParams }) {\n  extendParams({\n    expoEffect: {\n      imageScale: 1.125,\n      imageOffset: 1.25,\n      scale: 1.25,\n      rotate: 0,\n      grayscale: true,\n    },\n  });\n\n  const setTranslate = () => {\n    const { slides, rtlTranslate: rtl } = swiper;\n    const spv = swiper.params.slidesPerView;\n    const isHorizontal = swiper.isHorizontal();\n    let translateOffset = 0.5;\n    const params = swiper.params.expoEffect;\n    const imageOffset = Math.max(1.25, params.imageOffset);\n    if (spv > 1.5) {\n      const minTranslateOffset = (imageOffset - 1) / 2 / imageOffset;\n      translateOffset = Math.max(minTranslateOffset, 0.5 - (spv - 1.5));\n    }\n    const imageScale = Math.max(1.125, params.imageScale);\n    const scale = Math.max(1.25, params.scale);\n    const rtlMultiplier = rtl ? -1 : 1;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const contentWrapEl = slideEl.querySelector('.expo-container');\n      const contentEl = slideEl.querySelector('.expo-content');\n      const imageEl = slideEl.querySelector('.expo-image');\n      const progress = slideEl.progress;\n      const progressLimited = Math.max(Math.min(progress, 1), -1);\n\n      if (imageEl) {\n        imageEl.style.transform = `translate${isHorizontal ? 'X' : 'Y'}(${\n          progressLimited * translateOffset * 100 * rtlMultiplier\n        }%) scale(${1 + (imageScale - 1) * Math.abs(progressLimited)})`;\n        if (params.grayscale) {\n          imageEl.style.filter = `grayscale(${Math.abs(progressLimited)})`;\n        }\n      }\n      const sides = isHorizontal\n        ? rtl\n          ? ['right', 'left']\n          : ['left', 'right']\n        : ['top', 'bottom'];\n      if (Math.abs(progress) > 0.01) {\n        if (imageEl) {\n          imageEl.style.transformOrigin = progress > 0 ? sides[0] : sides[1];\n        }\n        if (contentWrapEl) {\n          contentWrapEl.style.transformOrigin =\n            progress > 0 ? sides[1] : sides[0];\n        }\n      }\n      if (contentWrapEl) {\n        contentWrapEl.style.transform = `scale(${\n          1 + (scale - 1) * Math.abs(progressLimited)\n        }) rotate${isHorizontal ? 'Y' : 'X'}(${\n          params.rotate *\n          progressLimited *\n          (isHorizontal ? 1 : -1) *\n          rtlMultiplier\n        }deg)`;\n      }\n      if (contentEl) {\n        contentEl.style.transform = `translate${isHorizontal ? 'X' : 'Y'}(${\n          progressLimited * 100 * rtlMultiplier\n        }%)`;\n        contentEl.style.opacity = 1 - Math.abs(progressLimited) * 2;\n      }\n    }\n  };\n\n  const setTransition = (duration) => {\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      [\n        ...slideEl.querySelectorAll(\n          '.expo-container, .expo-image, .expo-content',\n        ),\n      ].forEach((el) => {\n        el.style.transitionDuration = `${duration}ms`;\n      });\n    }\n  };\n  const setSize = () => {\n    const box = swiper.el.getBoundingClientRect();\n    const size = swiper.isHorizontal() ? box.height : box.width;\n    const { rotate, scale, imageOffset } = swiper.params.expoEffect;\n    swiper.el.style.setProperty('--expo-image-offset', imageOffset);\n    const currentValue = swiper.el.style.getPropertyValue('--expo-padding');\n    const currentValueNumber = parseInt(currentValue, 10) || 0;\n\n    const activeSlideSize = size / scale;\n    let newValue = (size - activeSlideSize) / 2;\n    if (rotate) {\n      newValue = newValue * 1.35;\n    }\n    newValue = Math.round(newValue);\n\n    if (currentValue && !Number.isNaN(currentValueNumber)) {\n      if (Math.abs(newValue - currentValueNumber) < 5) return;\n    }\n\n    swiper.el.style.setProperty('--expo-padding', `${newValue}px`);\n  };\n\n  on('init', setSize);\n  on('resize', setSize);\n  on('update', setSize);\n\n  effectInit({\n    effect: 'expo',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      // resizeObserver: false,\n      centeredSlides: true,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n    }),\n  });\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;CAYC;;;;AAED;AAAA;;AAEA;;AAIe,SAAS,WAAW,EAAE,MAAM,EAAE,EAAE,EAAE,YAAY,EAAE;IAC7D,aAAa;QACX,YAAY;YACV,YAAY;YACZ,aAAa;YACb,OAAO;YACP,QAAQ;YACR,WAAW;QACb;IACF;IAEA,MAAM,eAAe;QACnB,MAAM,EAAE,MAAM,EAAE,cAAc,GAAG,EAAE,GAAG;QACtC,MAAM,MAAM,OAAO,MAAM,CAAC,aAAa;QACvC,MAAM,eAAe,OAAO,YAAY;QACxC,IAAI,kBAAkB;QACtB,MAAM,SAAS,OAAO,MAAM,CAAC,UAAU;QACvC,MAAM,cAAc,KAAK,GAAG,CAAC,MAAM,OAAO,WAAW;QACrD,IAAI,MAAM,KAAK;YACb,MAAM,qBAAqB,CAAC,cAAc,CAAC,IAAI,IAAI;YACnD,kBAAkB,KAAK,GAAG,CAAC,oBAAoB,MAAM,CAAC,MAAM,GAAG;QACjE;QACA,MAAM,aAAa,KAAK,GAAG,CAAC,OAAO,OAAO,UAAU;QACpD,MAAM,QAAQ,KAAK,GAAG,CAAC,MAAM,OAAO,KAAK;QACzC,MAAM,gBAAgB,MAAM,CAAC,IAAI;QAEjC,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,KAAK,EAAG;YACzC,MAAM,UAAU,MAAM,CAAC,EAAE;YACzB,MAAM,gBAAgB,QAAQ,aAAa,CAAC;YAC5C,MAAM,YAAY,QAAQ,aAAa,CAAC;YACxC,MAAM,UAAU,QAAQ,aAAa,CAAC;YACtC,MAAM,WAAW,QAAQ,QAAQ;YACjC,MAAM,kBAAkB,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,UAAU,IAAI,CAAC;YAEzD,IAAI,SAAS;gBACX,QAAQ,KAAK,CAAC,SAAS,GAAG,CAAC,SAAS,EAAE,eAAe,MAAM,IAAI,CAAC,EAC9D,kBAAkB,kBAAkB,MAAM,cAC3C,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC/D,IAAI,OAAO,SAAS,EAAE;oBACpB,QAAQ,KAAK,CAAC,MAAM,GAAG,CAAC,UAAU,EAAE,KAAK,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAClE;YACF;YACA,MAAM,QAAQ,eACV,MACE;gBAAC;gBAAS;aAAO,GACjB;gBAAC;gBAAQ;aAAQ,GACnB;gBAAC;gBAAO;aAAS;YACrB,IAAI,KAAK,GAAG,CAAC,YAAY,MAAM;gBAC7B,IAAI,SAAS;oBACX,QAAQ,KAAK,CAAC,eAAe,GAAG,WAAW,IAAI,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;gBACpE;gBACA,IAAI,eAAe;oBACjB,cAAc,KAAK,CAAC,eAAe,GACjC,WAAW,IAAI,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;gBACtC;YACF;YACA,IAAI,eAAe;gBACjB,cAAc,KAAK,CAAC,SAAS,GAAG,CAAC,MAAM,EACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,GAAG,CAAC,iBAC5B,QAAQ,EAAE,eAAe,MAAM,IAAI,CAAC,EACnC,OAAO,MAAM,GACb,kBACA,CAAC,eAAe,IAAI,CAAC,CAAC,IACtB,cACD,IAAI,CAAC;YACR;YACA,IAAI,WAAW;gBACb,UAAU,KAAK,CAAC,SAAS,GAAG,CAAC,SAAS,EAAE,eAAe,MAAM,IAAI,CAAC,EAChE,kBAAkB,MAAM,cACzB,EAAE,CAAC;gBACJ,UAAU,KAAK,CAAC,OAAO,GAAG,IAAI,KAAK,GAAG,CAAC,mBAAmB;YAC5D;QACF;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,MAAM,EAAE,MAAM,EAAE,GAAG;QACnB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,KAAK,EAAG;YACzC,MAAM,UAAU,MAAM,CAAC,EAAE;YACzB;mBACK,QAAQ,gBAAgB,CACzB;aAEH,CAAC,OAAO,CAAC,CAAC;gBACT,GAAG,KAAK,CAAC,kBAAkB,GAAG,GAAG,SAAS,EAAE,CAAC;YAC/C;QACF;IACF;IACA,MAAM,UAAU;QACd,MAAM,MAAM,OAAO,EAAE,CAAC,qBAAqB;QAC3C,MAAM,OAAO,OAAO,YAAY,KAAK,IAAI,MAAM,GAAG,IAAI,KAAK;QAC3D,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,OAAO,MAAM,CAAC,UAAU;QAC/D,OAAO,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,uBAAuB;QACnD,MAAM,eAAe,OAAO,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC;QACtD,MAAM,qBAAqB,SAAS,cAAc,OAAO;QAEzD,MAAM,kBAAkB,OAAO;QAC/B,IAAI,WAAW,CAAC,OAAO,eAAe,IAAI;QAC1C,IAAI,QAAQ;YACV,WAAW,WAAW;QACxB;QACA,WAAW,KAAK,KAAK,CAAC;QAEtB,IAAI,gBAAgB,CAAC,OAAO,KAAK,CAAC,qBAAqB;YACrD,IAAI,KAAK,GAAG,CAAC,WAAW,sBAAsB,GAAG;QACnD;QAEA,OAAO,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,kBAAkB,GAAG,SAAS,EAAE,CAAC;IAC/D;IAEA,GAAG,QAAQ;IACX,GAAG,UAAU;IACb,GAAG,UAAU;IAEb,IAAA,oMAAU,EAAC;QACT,QAAQ;QACR;QACA;QACA;QACA;QACA,aAAa,IAAM;QACnB,iBAAiB,IAAM,CAAC;gBACtB,yBAAyB;gBACzB,gBAAgB;gBAChB,gBAAgB;gBAChB,qBAAqB;YACvB,CAAC;IACH;AACF","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/purnimauyangoda/carosals/node_modules/swiper/swiper-effect-utils.mjs"],"sourcesContent":["/**\n * Swiper 11.2.10\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2025 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: June 28, 2025\n */\n\nexport { c as createShadow } from './shared/create-shadow.mjs';\nexport { e as effectInit } from './shared/effect-init.mjs';\nexport { e as effectTarget } from './shared/effect-target.mjs';\nexport { e as effectVirtualTransitionEnd } from './shared/effect-virtual-transition-end.mjs';\nexport { g as getSlideTransformEl } from './shared/utils.mjs';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;AAED;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}}]
}